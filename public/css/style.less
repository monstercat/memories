
.transition(@x) {
  -webkit-transition: @x;
  -moz-transition: @x;
  -ms-transition: @x;
  -o-transition: @x;
  transition: @x;
}

.radial-gradient(@s,@e) {
  background: -webkit-radial-gradient(@s, @e);
  background: -moz-radial-gradient(@s, @e);
  background: -ms-radial-gradient(@s, @e);
  background: -o-radial-gradient(@s, @e);
  background: radial-gradient(@s, @e);
}

body {
  // padding: 50px;
  margin: 0px;
  font-size: 42px;
  color: #eee;
  font-family: "Georgia", "Lucida Grande", Helvetica, Arial, sans-serif;
  //.radial-gradient(#3a3a3a, #161616);
  background-image: url('/img/space.jpg');
  background-size: 100% auto;
}

.step.active {
  opacity: 1;
}

.memory-slide{
  text-align: center;
  width: 800px;
  opacity: 0.2;
  .transition(opacity 1s);
  line-height: 50px;
}

a {
  color: #00B7FF;
}

@sideBar-width: 400px;
@arrow-width: 60px;

.memories-container{
  height: 100%;
}

.border{
  float: right;
  height: 100%;
  overflow: auto;
}

.side-bar{
	position: absolute;
	height: 100%;
	right: -(@sideBar-width - @arrow-width - 40px);
  top: 0px;
  font-family: sans-serif;
}

.side-bar-icon{
  top: 45%;
  position: absolute;
  z-index: 1000;
  left: 15px;
  margin: 35px 0px 0px 10px;
}

.arrow{
  float: left;
  width: 60px;
  height: 100px;
  background-color: rgba(34, 34, 34, 0.49);
  border-radius: 60px 0px 0px 60px;
  position: relative;
  top: 45%;
  border: 2px solid rgb(44, 44, 44);
  border-right: 0px;
}

.content-container{
  float: right;
  height: 100%;
  background-color: rgba(34, 34, 34, 0.49);
  width: 340px;
}

.content{
  padding: 100px 15px 0px 0px;
}

.hidden{
  display:none
}

.form-horizontal .controls{
  margin-left: 40px;
}

.input-filed{
  width: 260px;
}

.clickable{
  cursor: pointer;
}

.alertify-log{
  background-color: black;
  font-size: 12px;
}

.hint {
    /*
        We hide the hint until presentation is started and from browsers not supporting
        impress.js, as they will have a linear scrollable view ...
    */
    display: none;

    /*
        ... and give it some fixed position and nice styles.
    */
    position: fixed;
    left: 0;
    right: 0;
    top: 0px;
    height: 30px;
    background-color: rgba(167, 158, 158, 0.49);

    // background: rgba(0,0,0,0.5);
    color: #EEE;
    text-align: center;

    font-size: 50px;
    padding: 20px;

    z-index: 100;

    /*
        By default we don't want the hint to be visible, so we make it transparent ...
    */
    opacity: 0;

    /*
        ... and position it below the bottom of the screen (relative to it's fixed position)
    */
    -webkit-transform: translateY(400px);
    -moz-transform:    translateY(400px);
    -ms-transform:     translateY(400px);
    -o-transform:      translateY(400px);
    transform:         translateY(400px);

    /*
        Now let's imagine that the hint is visible and we want to fade it out and move out
        of the screen.

        So we define the transition on the opacity property with 1s duration and another
        transition on transform property delayed by 1s so it will happen after the fade out
        on opacity finished.

        This way user will not see the hint moving down.
    */
    -webkit-transition: opacity 1s, -webkit-transform 0.5s 1s;
    -moz-transition:    opacity 1s,    -moz-transform 0.5s 1s;
    -ms-transition:     opacity 1s,     -ms-transform 0.5s 1s;
    -o-transition:      opacity 1s,      -o-transform 0.5s 1s;
    transition:         opacity 1s,         transform 0.5s 1s;
}

/*
    Now we 'enable' the hint when presentation is initialized ...
*/
.impress-enabled .hint { display: block }

/*
    ... and we will show it when the first step (with id 'bored') is active.
*/
.impress-on-step-1 .hint {
    /*
        We remove the transparency and position the hint in its default fixed
        position.
    */
    opacity: 1;

    -webkit-transform: translateY(0px);
    -moz-transform:    translateY(0px);
    -ms-transform:     translateY(0px);
    -o-transform:      translateY(0px);
    transform:         translateY(0px);

    /*
        Now for fade in transition we have the oposite situation from the one
        above.

        First after 4.5s delay we animate the transform property to move the hint
        into its correct position and after that we fade it in with opacity
        transition.
    */
    -webkit-transition: opacity 1s 5s, -webkit-transform 0.5s 4.5s;
    -moz-transition:    opacity 1s 5s,    -moz-transform 0.5s 4.5s;
    -ms-transition:     opacity 1s 5s,     -ms-transform 0.5s 4.5s;
    -o-transition:      opacity 1s 5s,      -o-transform 0.5s 4.5s;
    transition:         opacity 1s 5s,         transform 0.5s 4.5s;
}